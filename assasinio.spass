% PUZ001
begin_problem(Pelletier54).

list_of_descriptions.
name({**}). % stringa vuota sarebbe {**}
author({**}).
status(unsatisfiable).
description({**}).
end_of_list.

% Bisogna seguire quest'ordine functions e poi predicates perchè sennò da errore
list_of_symbols.
  functions[(a,0),(b,0),(c,0)]. % i tre personaggi
  % L -> x live in the house
  % K -> x kill y
  % H -> x hate y
  % R -> x is richer then y
  predicates[(L,1),(K,2),(H,2),(R,2)]. 
end_of_list.

list_of_formulae(axioms).
formula(
    exists([x],and(L(x),K(x,a)))
).

formula(L(a)).
formula(L(b)).
formula(L(c)).
formula(forall([x],implies(L(x),or(equal(x,a),equal(x,b),equal(x,c))))).

formula(forall([x,y],implies(K(x,y),H(x,y)))).
formula(forall([x,y],implies(K(x,y),not(R(x,y))))).

formula(forall([x],implies(H(a,x),not(H(c,x))))).

formula(not(H(a,b))).
formula(forall([x],implies(not(equal(x,b)),H(a,x)))).
formula(forall([x],implies(not(R(x,a)),H(b,x)))).
formula(forall([x],implies(H(a,x),H(b,x)))).
formula(forall([x],exists([y],not(H(x,y))))).
formula(not(equal(a,b))).

end_of_list.

list_of_formulae(conjectures).
% Agata si ammazza
formula(K(a,a)).

end_of_list.


end_problem. %-> finisce il problema

% OUTPUT: -> SPASS beiseite: Proof found.